{"version":3,"file":"798.213d69ee.iframe.bundle.js","mappings":"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","sources":["./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/layout.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/a11y.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/bidi.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/coercion.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/keycodes.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/observers.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/platform.mjs","./node_modules/.pnpm/@angular+cdk@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/cdk/fesm2020/cdk.mjs","./node_modules/.pnpm/@angular+material@15.2.5_@angular+animations@15.2.5_@angular+cdk@15.2.5_@angular+common@15.2._ilx6noj34uywwqivix57kj22rm/node_modules/@angular/material/fesm2020/core.mjs","./node_modules/.pnpm/@storybook+angular@7.0.0_@angular-devkit+architect@0.1502.4_@angular-devkit+build-angular@15._borupentpscueshfmeyptwk5ia/node_modules/@storybook/angular/dist/client/decorators.js","./node_modules/.pnpm/@storybook+angular@7.0.0_@angular-devkit+architect@0.1502.4_@angular-devkit+build-angular@15._borupentpscueshfmeyptwk5ia/node_modules/@storybook/angular/dist/client/index.js","./node_modules/.pnpm/@storybook+angular@7.0.0_@angular-devkit+architect@0.1502.4_@angular-devkit+build-angular@15._borupentpscueshfmeyptwk5ia/node_modules/@storybook/angular/dist/client/public-api.js","./node_modules/.pnpm/@storybook+angular@7.0.0_@angular-devkit+architect@0.1502.4_@angular-devkit+build-angular@15._borupentpscueshfmeyptwk5ia/node_modules/@storybook/angular/dist/client/public-types.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutModule {\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakpointObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nAriaDescriber.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n}\nInteractivityChecker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nInteractivityChecker.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n}\nCdkTrapFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTrapFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFocusTrapManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nConfigurableFocusTrapFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n}\nInputModalityDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nInputModalityDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n}\nLiveAnnouncer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nLiveAnnouncer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAriaLive.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\nFocusMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nFocusMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n}\nCdkMonitorFocus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkMonitorFocus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nHighContrastModeDetector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule });\nA11yModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] });\nA11yModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nDirectionality.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Directionality, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nDir.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBidiModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] });\nBidiModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BidiModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAC_ENTER = 3;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst NUM_CENTER = 12;\nconst ENTER = 13;\nconst SHIFT = 16;\nconst CONTROL = 17;\nconst ALT = 18;\nconst PAUSE = 19;\nconst CAPS_LOCK = 20;\nconst ESCAPE = 27;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst LEFT_ARROW = 37;\nconst UP_ARROW = 38;\nconst RIGHT_ARROW = 39;\nconst DOWN_ARROW = 40;\nconst PLUS_SIGN = 43;\nconst PRINT_SCREEN = 44;\nconst INSERT = 45;\nconst DELETE = 46;\nconst ZERO = 48;\nconst ONE = 49;\nconst TWO = 50;\nconst THREE = 51;\nconst FOUR = 52;\nconst FIVE = 53;\nconst SIX = 54;\nconst SEVEN = 55;\nconst EIGHT = 56;\nconst NINE = 57;\nconst FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186\nconst FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187\nconst QUESTION_MARK = 63;\nconst AT_SIGN = 64;\nconst A = 65;\nconst B = 66;\nconst C = 67;\nconst D = 68;\nconst E = 69;\nconst F = 70;\nconst G = 71;\nconst H = 72;\nconst I = 73;\nconst J = 74;\nconst K = 75;\nconst L = 76;\nconst M = 77;\nconst N = 78;\nconst O = 79;\nconst P = 80;\nconst Q = 81;\nconst R = 82;\nconst S = 83;\nconst T = 84;\nconst U = 85;\nconst V = 86;\nconst W = 87;\nconst X = 88;\nconst Y = 89;\nconst Z = 90;\nconst META = 91; // WIN_KEY_LEFT\nconst MAC_WK_CMD_LEFT = 91;\nconst MAC_WK_CMD_RIGHT = 93;\nconst CONTEXT_MENU = 93;\nconst NUMPAD_ZERO = 96;\nconst NUMPAD_ONE = 97;\nconst NUMPAD_TWO = 98;\nconst NUMPAD_THREE = 99;\nconst NUMPAD_FOUR = 100;\nconst NUMPAD_FIVE = 101;\nconst NUMPAD_SIX = 102;\nconst NUMPAD_SEVEN = 103;\nconst NUMPAD_EIGHT = 104;\nconst NUMPAD_NINE = 105;\nconst NUMPAD_MULTIPLY = 106;\nconst NUMPAD_PLUS = 107;\nconst NUMPAD_MINUS = 109;\nconst NUMPAD_PERIOD = 110;\nconst NUMPAD_DIVIDE = 111;\nconst F1 = 112;\nconst F2 = 113;\nconst F3 = 114;\nconst F4 = 115;\nconst F5 = 116;\nconst F6 = 117;\nconst F7 = 118;\nconst F8 = 119;\nconst F9 = 120;\nconst F10 = 121;\nconst F11 = 122;\nconst F12 = 123;\nconst NUM_LOCK = 144;\nconst SCROLL_LOCK = 145;\nconst FIRST_MEDIA = 166;\nconst FF_MINUS = 173;\nconst MUTE = 173; // Firefox (Gecko) fires 181 for MUTE\nconst VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN\nconst VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP\nconst FF_MUTE = 181;\nconst FF_VOLUME_DOWN = 182;\nconst LAST_MEDIA = 183;\nconst FF_VOLUME_UP = 183;\nconst SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON\nconst EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS\nconst COMMA = 188;\nconst DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS\nconst PERIOD = 190;\nconst SLASH = 191;\nconst APOSTROPHE = 192;\nconst TILDE = 192;\nconst OPEN_SQUARE_BRACKET = 219;\nconst BACKSLASH = 220;\nconst CLOSE_SQUARE_BRACKET = 221;\nconst SINGLE_QUOTE = 222;\nconst MAC_META = 224;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param event Event to be checked.\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some(modifier => event[modifier]);\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PERIOD, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\nclass MutationObserverFactory {\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MutationObserverFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMutationObserverFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MutationObserverFactory, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MutationObserverFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** An injectable service that allows watching elements for changes to their content. */\nclass ContentObserver {\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /** Keeps track of the existing MutationObservers so they can be reused. */\n        this._observedElements = new Map();\n    }\n    ngOnDestroy() {\n        this._observedElements.forEach((_, element) => this._cleanupObserver(element));\n    }\n    observe(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        return new Observable((observer) => {\n            const stream = this._observeElement(element);\n            const subscription = stream.subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            };\n        });\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            const stream = new Subject();\n            const observer = this._mutationObserverFactory.create(mutations => stream.next(mutations));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true,\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            this._observedElements.get(element).count++;\n        }\n        return this._observedElements.get(element).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            this._observedElements.get(element).count--;\n            if (!this._observedElements.get(element).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /** Clean up the underlying MutationObserver for the specified element. */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = this._observedElements.get(element);\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ContentObserver, deps: [{ token: MutationObserverFactory }], target: i0.ɵɵFactoryTarget.Injectable });\nContentObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ContentObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ContentObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MutationObserverFactory }]; } });\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /** Debounce interval for emitting the changes. */\n    get debounce() {\n        return this._debounce;\n    }\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** Event emitted for each change in the element's content. */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    _subscribe() {\n        this._unsubscribe();\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular(() => {\n            this._currentSubscription = (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        });\n    }\n    _unsubscribe() {\n        this._currentSubscription?.unsubscribe();\n    }\n}\nCdkObserveContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkObserveContent, deps: [{ token: ContentObserver }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\nCdkObserveContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: CdkObserveContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkObserveContent]',\n                    exportAs: 'cdkObserveContent',\n                }]\n        }], ctorParameters: function () { return [{ type: ContentObserver }, { type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { event: [{\n                type: Output,\n                args: ['cdkObserveContent']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkObserveContentDisabled']\n            }], debounce: [{\n                type: Input\n            }] } });\nclass ObserversModule {\n}\nObserversModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nObserversModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, declarations: [CdkObserveContent], exports: [CdkObserveContent] });\nObserversModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, providers: [MutationObserverFactory] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ObserversModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkObserveContent],\n                    declarations: [CdkObserveContent],\n                    providers: [MutationObserverFactory],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPlatform.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Platform, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPlatformModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule });\nPlatformModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* RtlScrollAxisType.NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('15.2.5');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output, ViewChild } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('15.2.5');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // Inject in here so the reference to `Platform` can be removed in production mode.\n                const platform = inject(Platform, { optional: true });\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || !isBrowser) {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value, parseFormat) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [NativeDateModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n        /** Current state of the ripple. */\n        this.state = 3 /* RippleState.HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n    constructor() {\n        this._events = new Map();\n        /** Event handler that is bound and which dispatches the events to the different targets. */\n        this._delegateEventHandler = (event) => {\n            const target = _getEventTarget(event);\n            if (target) {\n                this._events.get(event.type)?.forEach((handlers, element) => {\n                    if (element === target || element.contains(target)) {\n                        handlers.forEach(handler => handler.handleEvent(event));\n                    }\n                });\n            }\n        };\n    }\n    /** Adds an event handler. */\n    addHandler(ngZone, name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (handlersForEvent) {\n            const handlersForElement = handlersForEvent.get(element);\n            if (handlersForElement) {\n                handlersForElement.add(handler);\n            }\n            else {\n                handlersForEvent.set(element, new Set([handler]));\n            }\n        }\n        else {\n            this._events.set(name, new Map([[element, new Set([handler])]]));\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n            });\n        }\n    }\n    /** Removes an event handler. */\n    removeHandler(name, element, handler) {\n        const handlersForEvent = this._events.get(name);\n        if (!handlersForEvent) {\n            return;\n        }\n        const handlersForElement = handlersForEvent.get(element);\n        if (!handlersForElement) {\n            return;\n        }\n        handlersForElement.delete(handler);\n        if (handlersForElement.size === 0) {\n            handlersForEvent.delete(element);\n        }\n        if (handlersForEvent.size === 0) {\n            this._events.delete(name);\n            document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n        }\n    }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, _platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /**\n         * Map of currently active ripple references.\n         * The ripple reference is mapped to its element event listeners.\n         * The reason why `| null` is used is that event listeners are added only\n         * when the condition is truthy (see the `_startFadeOutTransition` method).\n         */\n        this._activeRipples = new Map();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (_platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n        // `transition: none` or `display: none`). This is technically unexpected since animations are\n        // controlled through the animation config, but this exists for backwards compatibility. This\n        // logic does not need to be super accurate since it covers some edge cases which can be easily\n        // avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s' ||\n            // If the container is 0x0, it's likely `display: none`.\n            (containerRect.width === 0 && containerRect.height === 0);\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = 0 /* RippleState.FADING_IN */;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* RippleState.FADING_OUT */;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        // Use event delegation for the trigger events since they're\n        // set up during creation and are performance-sensitive.\n        pointerDownEvents.forEach(type => {\n            RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n        });\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            // The events for hiding the ripple are bound directly on the trigger, because:\n            // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n            // delegation will be diminished by having to look through all the data structures often.\n            // 2. They aren't as performance-sensitive, because they're bound only after the user\n            // has interacted with an element.\n            this._ngZone.runOutsideAngular(() => {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n                });\n            });\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = 1 /* RippleState.VISIBLE */;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = 3 /* RippleState.HIDDEN */;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        const trigger = this._triggerElement;\n        if (trigger) {\n            pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n            }\n        }\n    }\n}\nRippleRenderer._eventManager = new RippleEventManager();\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n        /**\n         * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n         * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n         */\n        this.appearance = 'full';\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\", appearance: \"appearance\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class.mat-pseudo-checkbox-minimal\": \"appearance === \\\"minimal\\\"\", \"class.mat-pseudo-checkbox-full\": \"appearance === \\\"full\\\"\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n                        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-full{border:2px solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\" }, classAttribute: \"mat-mdc-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  aria-hidden=\\\"true\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{white-space:normal}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-mdc-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span\\n  class=\\\"mat-mdc-optgroup-label\\\"\\n  aria-hidden=\\\"true\\\"\\n  [class.mdc-list-item--disabled]=\\\"disabled\\\"\\n  [id]=\\\"_labelId\\\">\\n  <span class=\\\"mdc-list-item__primary-text\\\">{{ label }} <ng-content></ng-content></span>\\n</span>\\n\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{white-space:normal}\"] }]\n        }] });\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n        return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                if (this._mostRecentViewValue) {\n                    this._stateChanges.next();\n                }\n                this._mostRecentViewValue = viewValue;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, viewQueries: [{ propertyName: \"_text\", first: true, predicate: [\"text\"], descendants: true, static: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }], _text: [{\n                type: ViewChild,\n                args: ['text', { static: true }]\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mdc-list-item--selected\": \"selected\", \"class.mat-mdc-option-multiple\": \"multiple\", \"class.mat-mdc-option-active\": \"active\", \"class.mdc-list-item--disabled\": \"disabled\", \"id\": \"id\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled.toString()\" }, classAttribute: \"mat-mdc-option mdc-list-item\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" state=\\\"checked\\\" [disabled]=\\\"disabled\\\"\\n    appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mdc-list-item--selected]': 'selected',\n                        '[class.mat-mdc-option-multiple]': 'multiple',\n                        '[class.mat-mdc-option-active]': 'active',\n                        '[class.mdc-list-item--disabled]': 'disabled',\n                        '[id]': 'id',\n                        // Set aria-selected to false for non-selected items and true for selected items. Conform to\n                        // [WAI ARIA Listbox authoring practices guide](\n                        //  https://www.w3.org/WAI/ARIA/apg/patterns/listbox/), \"If any options are selected, each\n                        // selected option has either aria-selected or aria-checked  set to true. All options that are\n                        // selectable but not selected have either aria-selected or aria-checked set to false.\" Align\n                        // aria-selected implementation of Chips and List components.\n                        //\n                        // Set `aria-selected=\"false\"` on not-selected listbox options to fix VoiceOver announcing\n                        // every option as \"selected\" (#21491).\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-mdc-option mdc-list-item',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-mdc-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<ng-content select=\\\"mat-icon\\\"></ng-content>\\n\\n<span class=\\\"mdc-list-item__primary-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- Render checkmark at the end for single-selection. -->\\n<mat-pseudo-checkbox *ngIf=\\\"!multiple && selected && !hideSingleSelectionIndicator\\\"\\n    class=\\\"mat-mdc-option-pseudo-checkbox\\\" state=\\\"checked\\\" [disabled]=\\\"disabled\\\"\\n    appearance=\\\"minimal\\\"></mat-pseudo-checkbox>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-mdc-option-ripple mat-mdc-focus-indicator\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option.mdc-list-item{align-items:center}.mat-mdc-option.mdc-list-item--disabled{opacity:.38;cursor:default}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.componentWrapperDecorator = exports.applicationConfig = exports.moduleMetadata = void 0;\nconst ComputesTemplateFromComponent_1 = require(\"./angular-beta/ComputesTemplateFromComponent\");\nconst NgComponentAnalyzer_1 = require(\"./angular-beta/utils/NgComponentAnalyzer\");\n// We use `any` here as the default type rather than `Args` because we need something that is\n// castable to any component-specific args type when the user is being careful.\nconst moduleMetadata = (metadata) => (storyFn) => {\n    const story = storyFn();\n    const storyMetadata = story.moduleMetadata || {};\n    metadata = metadata || {};\n    return {\n        ...story,\n        moduleMetadata: {\n            declarations: [...(metadata.declarations || []), ...(storyMetadata.declarations || [])],\n            entryComponents: [\n                ...(metadata.entryComponents || []),\n                ...(storyMetadata.entryComponents || []),\n            ],\n            imports: [...(metadata.imports || []), ...(storyMetadata.imports || [])],\n            schemas: [...(metadata.schemas || []), ...(storyMetadata.schemas || [])],\n            providers: [...(metadata.providers || []), ...(storyMetadata.providers || [])],\n        },\n    };\n};\nexports.moduleMetadata = moduleMetadata;\n/**\n * Decorator to set the config options which are available during the application bootstrap operation\n */\nfunction applicationConfig(\n/**\n * Set of config options available during the application bootstrap operation.\n */\nconfig) {\n    return (storyFn) => {\n        const story = storyFn();\n        const storyConfig = story.applicationConfig;\n        return {\n            ...story,\n            applicationConfig: storyConfig || config\n                ? {\n                    ...config,\n                    ...storyConfig,\n                    providers: [...(config?.providers || []), ...(storyConfig?.providers || [])],\n                }\n                : undefined,\n        };\n    };\n}\nexports.applicationConfig = applicationConfig;\nconst componentWrapperDecorator = (element, props) => (storyFn, storyContext) => {\n    const story = storyFn();\n    const currentProps = typeof props === 'function' ? props(storyContext) : props;\n    const template = (0, NgComponentAnalyzer_1.isComponent)(element)\n        ? (0, ComputesTemplateFromComponent_1.computesTemplateFromComponent)(element, currentProps ?? {}, story.template)\n        : element(story.template);\n    return {\n        ...story,\n        template,\n        ...(currentProps || story.props\n            ? {\n                props: {\n                    ...currentProps,\n                    ...story.props,\n                },\n            }\n            : {}),\n    };\n};\nexports.componentWrapperDecorator = componentWrapperDecorator;\n","\"use strict\";\n/// <reference types=\"webpack-env\" />\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applicationConfig = exports.componentWrapperDecorator = exports.moduleMetadata = void 0;\nrequire(\"./globals\");\n// eslint-disable-next-line import/export\n__exportStar(require(\"./public-api\"), exports);\n// eslint-disable-next-line import/export\n__exportStar(require(\"./public-types\"), exports);\nvar decorators_1 = require(\"./decorators\");\nObject.defineProperty(exports, \"moduleMetadata\", { enumerable: true, get: function () { return decorators_1.moduleMetadata; } });\nObject.defineProperty(exports, \"componentWrapperDecorator\", { enumerable: true, get: function () { return decorators_1.componentWrapperDecorator; } });\nObject.defineProperty(exports, \"applicationConfig\", { enumerable: true, get: function () { return decorators_1.applicationConfig; } });\n// optimization: stop HMR propagation in webpack\nmodule?.hot?.decline();\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.raw = exports.forceReRender = exports.configure = exports.storiesOf = void 0;\nconst core_client_1 = require(\"@storybook/core-client\");\nconst render_1 = require(\"./render\");\nconst decorateStory_1 = __importDefault(require(\"./decorateStory\"));\n__exportStar(require(\"./public-types\"), exports);\nconst RENDERER = 'angular';\nconst api = (0, core_client_1.start)(render_1.renderToCanvas, { decorateStory: decorateStory_1.default, render: render_1.render });\nconst storiesOf = (kind, m) => {\n    return api.clientApi.storiesOf(kind, m).addParameters({\n        renderer: RENDERER,\n    });\n};\nexports.storiesOf = storiesOf;\nconst configure = (...args) => api.configure(RENDERER, ...args);\nexports.configure = configure;\nexports.forceReRender = api.forceReRender;\nexports.raw = api.clientApi.raw;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n"],"names":["LayoutModule","ɵfac","ɵmod","i0","ɵinj","type","NgModule","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","constructor","_platform","this","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","BLINK","createEmptyStyleRule","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","i1","ɵprov","Injectable","providedIn","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","Subject","ngOnDestroy","next","complete","isMatched","value","splitQueries","coerceArray","some","mediaQuery","_registerQuery","mql","observe","observables","map","observable","stateObservable","combineLatest","concat","pipe","take","skip","debounceTime","breakpointStates","response","breakpoints","forEach","get","output","Observable","observer","handler","run","startWith","takeUntil","set","queries","split","reduce","a1","a2","trim","getAriaReferenceIds","el","attr","getAttribute","match","CDK_DESCRIBEDBY_ID_PREFIX","nextId","AriaDescriber","_document","_messageRegistry","_messagesContainer","_id","inject","APP_ID","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","messageElement","referenceCount","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","length","remove","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","removeAttribute","clear","textContent","_createMessagesContainer","delete","serverContainers","messagesContainer","style","visibility","classList","body","element","originalReferenceIds","filter","id","indexOf","join","addAriaReferencedId","ids","existingId","push","removeAriaReferencedId","filteredIds","val","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","serviceId","DOCUMENT","undefined","decorators","Inject","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","Subscription","_vertical","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","QueryList","_itemChangesSubscription","changes","subscribe","newItems","newIndex","toArray","skipPredicate","predicate","withWrap","shouldWrap","withVerticalOrientation","withHorizontalOrientation","direction","_horizontal","withAllowedModifierKeys","keys","withTypeAhead","debounceInterval","ngDevMode","getLabel","Error","unsubscribe","tap","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","cancelTypeahead","withHomeAndEnd","withPageUpDown","previousActiveItem","updateActiveItem","onKeydown","event","keyCode","isModifierAllowed","every","modifier","TAB","DOWN_ARROW","setNextItemActive","UP_ARROW","setPreviousItemActive","RIGHT_ARROW","LEFT_ARROW","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","targetIndex","_setActiveItemByIndex","PAGE_DOWN","itemsLength","hasModifierKey","toLocaleUpperCase","A","Z","ZERO","NINE","String","fromCharCode","preventDefault","activeItemIndex","activeItem","isTyping","_setActiveItemByDelta","itemArray","destroy","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","setInactiveStyles","super","setActiveStyles","FocusKeyManager","arguments","_origin","setFocusOrigin","origin","focus","InteractivityChecker","isDisabled","hasAttribute","isVisible","hasGeometry","offsetWidth","offsetHeight","getClientRects","getComputedStyle","isTabbable","frameElement","getFrameElement","getWindow","node","ownerDocument","defaultView","getTabIndexValue","nodeName","toLowerCase","tabIndexValue","IOS","isPotentiallyTabbableIOS","inputType","FIREFOX","tabIndex","isFocusable","config","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","ignoreVisibility","isNaN","parseInt","FocusTrap","_enabled","_startAnchor","_endAnchor","_toggleAnchorTabIndex","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","attachAnchors","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","focusInitialElementWhenReady","options","Promise","resolve","_executeOnStable","focusInitialElement","focusFirstTabbableElementWhenReady","focusLastTabbableElementWhenReady","_getRegionBoundary","bound","markers","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","focusableChild","hasAttached","root","children","tabbableChild","anchor","isEnabled","toggleAnchors","fn","isStable","onStable","FocusTrapFactory","create","deferCaptureElements","CdkTrapFocus","focusTrap","coerceBooleanProperty","autoCapture","_autoCapture","_elementRef","_focusTrapFactory","_previouslyFocusedElement","nativeElement","ngAfterContentInit","_captureFocus","ngDoCheck","ngOnChanges","autoCaptureChange","firstChange","_getFocusedElementPierceShadowDom","ɵdir","Directive","selector","exportAs","Input","ConfigurableFocusTrap","_focusTrapManager","register","deregister","_inertStrategy","defer","_enable","preventFocus","_disable","allowFocus","FOCUS_TRAP_INERT_STRATEGY","InjectionToken","EventListenerFocusTrapInertStrategy","_listener","_trapFocus","target","focusTrapRoot","contains","closest","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","splice","ConfigurableFocusTrapFactory","configObject","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","Optional","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","ALT","CONTROL","MAC_META","META","SHIFT","modalityEventListenerOptions","normalizePassiveListenerOptions","passive","capture","InputModalityDetector","mostRecentModality","_modality","ngZone","_mostRecentTarget","BehaviorSubject","_lastTouchMs","_onKeydown","_options","_getEventTarget","_onMousedown","Date","now","_onTouchstart","modalityDetected","modalityChanged","distinctUntilChanged","Document","LIVE_ANNOUNCER_ELEMENT_TOKEN","factory","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","announce","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","CdkAriaLive","_politeness","_subscription","_contentObserver","elementText","_previousAnnouncedText","_liveAnnouncer","i1$1","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","monitor","checkChildren","coerceElement","of","rootNode","_getShadowRoot","_getDocument","cachedInfo","subject","info","_registerGlobalListeners","stopMonitoring","elementInfo","_setClasses","_removeGlobalListeners","focusVia","_getClosestElementsInfo","currentElement","_originChanged","_setOrigin","_info","_getWindow","_getFocusOrigin","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","isFromInteraction","_originTimeoutId","ms","relatedTarget","Node","_emitOrigin","observers","rootNodeFocusListeners","modality","results","mostRecentTarget","labels","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","EventEmitter","focusOrigin","ngAfterViewInit","_monitorSubscription","emit","Output","HighContrastModeDetector","_breakpointSubscription","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","getHighContrastMode","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","A11yModule","highContrastModeDetector","ObserversModule","imports","declarations","exports","DIR_DOCUMENT","DIR_DOCUMENT_FACTORY","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","navigator","language","test","Directionality","bodyDir","dir","htmlDir","documentElement","Dir","_dir","_isInitialized","previousValue","_rawDir","provide","useExisting","providers","host","BidiModule","coerceNumberProperty","fallbackValue","_isNumberValue","parseFloat","Number","Array","isArray","coerceCssPixelValue","elementOrRef","ElementRef","coerceStringArray","separator","result","sourceValues","sourceValue","trimmedString","ENTER","ESCAPE","SPACE","modifiers","altKey","shiftKey","ctrlKey","metaKey","MutationObserverFactory","callback","MutationObserver","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","subscription","_observeElement","_unobserveElement","count","stream","mutations","characterData","childList","subtree","disconnect","CdkObserveContent","_disabled","_unsubscribe","_subscribe","debounce","_debounce","_currentSubscription","hasV8BreakIterator","supportedInputTypes","Intl","v8BreakIterator","Platform","_platformId","isPlatformBrowser","EDGE","userAgent","TRIDENT","chrome","CSS","ANDROID","SAFARI","PLATFORM_ID","Object","PlatformModule","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","rtlScrollAxisType","scrollBehaviorSupported","shadowDomIsSupported","supportsPassiveEventListeners","defineProperty","supportsScrollBehavior","Element","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","width","overflow","pointerEvents","content","contentStyle","height","scrollLeft","_supportsShadowDom","createShadowRoot","attachShadow","getRootNode","ShadowRoot","shadowRoot","newActiveElement","composedPath","_isTestEnvironment","__karma__","jasmine","jest","Mocha","VERSION","Version","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS","MATERIAL_SANITY_CHECKS_FACTORY","MatCommonModule","_sanityChecks","_hasDoneGlobalChecks","platform","optional","_checkIsEnabled","_checkDoctypeIsDefined","doc","doctype","_checkThemeIsPresent","display","_checkCdkVersionMatch","full","VERSION$1","name","mixinDisabled","base","mixinColor","defaultColor","color","_color","colorPalette","mixinDisableRipple","disableRipple","_disableRipple","mixinErrorState","updateErrorState","oldState","errorState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","stateChanges","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","LOCALE_ID","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf","DateTimeFormat","month","timeZone","_format","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","today","parse","parseFormat","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MatLine","MatLineModule","RippleRef","_renderer","_animationForciblyDisabledThroughCss","state","fadeOut","fadeOutRipple","passiveCapturingEventOptions$1","defaultRippleAnimationConfig","enterDuration","exitDuration","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","top","radius","distanceToFurthestCorner","rect","distX","Math","abs","right","distY","bottom","sqrt","ripple","transitionDuration","computedStyles","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","transform","persistent","_mostRecentTransientRipple","eventListeners","onTransitionEnd","_finishRippleTransition","onTransitionCancel","_destroyRipple","rippleEl","opacity","fadeOutAll","_getActiveRipples","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_eventManager","addHandler","handleEvent","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","size","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","rippleDisabled","clientX","clientY","rippleConfig","terminateOnPointerUp","from","trigger","removeHandler","RippleEventManager","_events","_delegateEventHandler","handlers","handlersForEvent","handlersForElement","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","_setupTriggerEventsIfEnabled","_trigger","globalOptions","_animationMode","_globalOptions","_rippleRenderer","ngOnInit","launch","configOrX","ANIMATION_MODULE_TYPE","unbounded","MatRippleModule","MatPseudoCheckbox","appearance","ɵcmp","Component","encapsulation","ViewEncapsulation","changeDetection","ChangeDetectionStrategy","template","styles","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","label","MAT_OPTGROUP","MatOptgroup","inputs","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","multiple","_parent","selected","_selected","group","hideSingleSelectionIndicator","_changeDetectorRef","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","active","viewValue","_text","select","markForCheck","_emitSelectionChangeEvent","deselect","_getHostElement","_handleKeydown","_selectViaInteraction","_getTabIndex","ngAfterViewChecked","ViewChild","static","MatOption","changeDetectorRef","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","i3","MatOptionModule","CommonModule","componentWrapperDecorator","applicationConfig","moduleMetadata","ComputesTemplateFromComponent_1","require","NgComponentAnalyzer_1","metadata","storyFn","story","storyMetadata","entryComponents","schemas","storyConfig","props","storyContext","currentProps","isComponent","computesTemplateFromComponent","__createBinding","o","m","k","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__exportStar","p","hasOwnProperty","call","decorators_1","__importDefault","mod","raw","forceReRender","configure","storiesOf","core_client_1","render_1","decorateStory_1","api","start","renderToCanvas","decorateStory","default","render","kind","clientApi","addParameters","renderer"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}
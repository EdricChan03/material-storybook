"use strict";(self.webpackChunkmaterial_storybook=self.webpackChunkmaterial_storybook||[]).push([[946],{"./projects/story-app/stories/components/material/button-toggle.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Group:()=>Group,Single:()=>Single,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/@storybook+angular@7.0.0_@angular-devkit+architect@0.1502.4_@angular-devkit+build-angular@15._borupentpscueshfmeyptwk5ia/node_modules/@storybook/angular/dist/index.mjs"),_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@angular+platform-browser@15.2.5_@angular+animations@15.2.5_@angular+common@15.2.5_@angular+core@15.2.5/node_modules/@angular/platform-browser/fesm2020/animations.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@angular+common@15.2.5_@angular+core@15.2.5_rxjs@6.6.7/node_modules/@angular/common/fesm2020/common.mjs"),_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/@angular+material@15.2.5_@angular+animations@15.2.5_@angular+cdk@15.2.5_@angular+common@15.2._ilx6noj34uywwqivix57kj22rm/node_modules/@angular/material/fesm2020/button-toggle.mjs"),_angular_material_icon__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/.pnpm/@angular+material@15.2.5_@angular+animations@15.2.5_@angular+cdk@15.2.5_@angular+common@15.2._ilx6noj34uywwqivix57kj22rm/node_modules/@angular/material/fesm2020/icon.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Angular Material/Button Toggle",component:_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_1__.Yi,subcomponents:{MatButtonToggleGroup:_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_1__.A9},decorators:[(0,_storybook_angular__WEBPACK_IMPORTED_MODULE_0__.moduleMetadata)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule,_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_3__.BrowserAnimationsModule,_angular_material_button_toggle__WEBPACK_IMPORTED_MODULE_1__.vV,_angular_material_icon__WEBPACK_IMPORTED_MODULE_4__.Ps]})],args:{disabled:!1,disableRipple:!1},argTypes:{appearance:{description:"The appearance style of the button.",defaultValue:"standard",options:[null,"legacy","standard"],control:{type:"select"}},disabled:{description:"Whether the button is disabled."},disableRipple:{description:"Whether ripples are disabled."}},parameters:{controls:{expanded:!0}}},Single=(args=>({template:'\n  <mat-button-toggle\n    [appearance]="appearance"\n    [checked]="checked"\n    [disabled]="disabled"\n    [disableRipple]="disableRipple">\n    Toggle me!\n  </mat-button-toggle>\n  ',props:args})).bind({});Single.args={checked:!1},Single.argTypes={checked:{description:"Whether the button is checked."}};const Group=(args=>({template:'\n  <mat-button-toggle-group\n    name="fontStyle"\n    aria-label="Font Style"\n    [vertical]="vertical"\n    [appearance]="appearance"\n    [disabled]="disabled"\n    [multiple]="multiple"\n    (change)="onChange($event)">\n    <mat-button-toggle value="bold">Bold</mat-button-toggle>\n    <mat-button-toggle value="italic">Italic</mat-button-toggle>\n    <mat-button-toggle value="underline">Underline</mat-button-toggle>\n  </mat-button-toggle-group>\n  ',props:args})).bind({});Group.args={vertical:!1,multiple:!1,disabled:!1},Group.argTypes={vertical:{description:"Whether the toggle group is vertical."},multiple:{description:"Whether multiple button toggles can be selected."},disabled:{description:"Whether the toggle group can be disabled."},onChange:{action:"onChange"}},Single.parameters={...Single.parameters,docs:{...Single.parameters?.docs,source:{originalSource:'args => ({\n  template: `\n  <mat-button-toggle\n    [appearance]="appearance"\n    [checked]="checked"\n    [disabled]="disabled"\n    [disableRipple]="disableRipple">\n    Toggle me!\n  </mat-button-toggle>\n  `,\n  props: args\n})',...Single.parameters?.docs?.source}}},Group.parameters={...Group.parameters,docs:{...Group.parameters?.docs,source:{originalSource:'args => ({\n  template: `\n  <mat-button-toggle-group\n    name="fontStyle"\n    aria-label="Font Style"\n    [vertical]="vertical"\n    [appearance]="appearance"\n    [disabled]="disabled"\n    [multiple]="multiple"\n    (change)="onChange($event)">\n    <mat-button-toggle value="bold">Bold</mat-button-toggle>\n    <mat-button-toggle value="italic">Italic</mat-button-toggle>\n    <mat-button-toggle value="underline">Underline</mat-button-toggle>\n  </mat-button-toggle-group>\n  `,\n  props: args\n})',...Group.parameters?.docs?.source}}}}}]);
{"version":3,"file":"main.4b4427a6.iframe.bundle.js","mappings":"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","sources":["./projects/story-app/stories/components/material/autocomplete.stories.ts","./projects/story-app/stories/components/material/button-toggle.stories.ts","./projects/story-app/stories/components/material/button.stories.ts","./projects/story-app/stories/components/material/examples/autocomplete.stories.ts","./projects/story-app/stories/components/material/examples/button-toggle.stories.ts","./projects/story-app/stories/components/material/examples/button.stories.ts","./projects/story-app/stories/components/material/examples/menu.stories.ts","./projects/story-app/stories/components/material/menu.stories.ts","./.storybook/preview.js","./.storybook/preview.js-generated-config-entry.js","./projects/story-app/stories/components/material/getting-started.stories.mdx","./projects/story-app/stories/components/material/resources.stories.mdx","webpack:///./projects/story-app/stories/ sync ^\\.(?9305","./projects/story-app/stories/ sync ^\\.(","./generated-stories-entry.cjs"],"sourcesContent":["import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nexport default {\n  title: 'Components/Angular Material/Autocomplete',\n  component: MatAutocomplete,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        MatAutocompleteModule,\n        MatFormFieldModule,\n        MatInputModule\n      ]\n    })\n  ],\n  args: {\n    autoActiveFirstOption: false,\n    class: '',\n    disableRipple: false,\n    panelWidth: '',\n    autocompleteTriggerDisabled: false,\n    autocompleteTriggerPosition: 'auto'\n  },\n  argTypes: {\n    autoActiveFirstOption: {\n      description: 'Whether the first option should be highlighted when the autocomplete panel is opened.',\n      defaultValue: false\n    },\n    class: {\n      description: 'Classes to be applied to the autocomplete panel inside of the overlay container.'\n    },\n    disableRipple: {\n      description: 'Whether ripples are disabled.'\n    },\n    panelWidth: {\n      description: 'Specifies the width of the autocomplete panel. (Can be any CSS sizing value)'\n    },\n    onClosed: {\n      description: 'Event that is emitted when the autocomplete panel is closed.',\n      action: 'onClosed'\n    },\n    onOpened: {\n      description: 'Event that is emitted when the autocomplete panel is opened.',\n      action: 'onOpened'\n    },\n    onOptionActivated: {\n      description: 'Event that is emitted when an option is activated using the keyboard.',\n      action: 'onOptionActivated'\n    },\n    onOptionSelected: {\n      description: 'Event that is emitted when an option is selected.',\n      action: 'onOptionSelected'\n    },\n    autocompleteTriggerDisabled: {\n      description: 'Whether the autocomplete is disabled.',\n      defaultValue: false\n    },\n    autocompleteTriggerPosition: {\n      description: 'Position of the autocomplete panel relative to the trigger element.',\n      control: {\n        type: 'select',\n        options: [null, 'auto', 'above', 'below']\n      }\n    }\n  },\n  parameters: {\n    controls: { expanded: true }\n  }\n} as Meta;\n\nexport const Default: Story<MatAutocomplete> = (args) => ({\n  template: `\n  <form>\n    <mat-form-field>\n      <mat-label>Pick a number</mat-label>\n      <input type=\"text\"\n        matInput\n        [matAutocomplete]=\"auto\"\n        [matAutocompleteDisabled]=\"autocompleteTriggerDisabled\"\n        [matAutocompletePosition]=\"autocompleteTriggerPosition\">\n      <mat-autocomplete #auto=\"matAutocomplete\"\n        [autoActiveFirstOption]=\"autoActiveFirstOption\"\n        [class]=\"class\"\n        [disableRipple]=\"disableRipple\"\n        [panelWidth]=\"panelWidth\"\n        (closed)=\"onClosed()\"\n        (opened)=\"onOpened()\"\n        (optionActivated)=\"onOptionActivated($event)\"\n        (optionSelected)=\"onOptionSelected($event)\">\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n  `,\n  props: {\n    ...args,\n    options: ['One', 'Two', 'Three', 'Four']\n  }\n});\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonToggle, MatButtonToggleGroup, MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport default {\n  title: 'Components/Angular Material/Button Toggle',\n  component: MatButtonToggle,\n  subcomponents: { MatButtonToggleGroup },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonToggleModule,\n        MatIconModule\n      ]\n    })\n  ],\n  args: {\n    disabled: false\n  },\n  argTypes: {\n    appearance: {\n      description: 'The appearance style of the button.',\n      defaultValue: 'standard',\n      control: {\n        type: 'select',\n        options: [null, 'legacy', 'standard']\n      }\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    }\n  },\n  parameters: {\n    controls: { expanded: true }\n  }\n} as Meta;\n\nconst single: Story<MatButtonToggle> = (args) => ({\n  template: `\n  <mat-button-toggle\n    [appearance]=\"appearance\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\">\n    Toggle me!\n  </mat-button-toggle>\n  `,\n  props: args\n});\n\nexport const Single = single.bind({});\n\nSingle.args = {\n  checked: false\n};\n\nSingle.argTypes = {\n  checked: {\n    description: 'Whether the button is checked.'\n  }\n};\n\nconst group: Story<MatButtonToggleGroup> = (args) => ({\n  template: `\n  <mat-button-toggle-group\n    name=\"fontStyle\"\n    aria-label=\"Font Style\"\n    [vertical]=\"vertical\"\n    [appearance]=\"appearance\"\n    [disabled]=\"disabled\"\n    [multiple]=\"multiple\"\n    (change)=\"onChange($event)\">\n    <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\n    <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\n    <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\n  </mat-button-toggle-group>\n  `,\n  props: args\n});\n\nexport const Group = group.bind({});\n\nGroup.args = {\n  vertical: false,\n  multiple: false,\n  disabled: false\n};\n\nGroup.argTypes = {\n  vertical: {\n    description: 'Whether the toggle group is vertical.'\n  },\n  multiple: {\n    description: 'Whether multiple button toggles can be selected.'\n  },\n  disabled: {\n    description: 'Whether the toggle group can be disabled.'\n  },\n  onChange: {\n    action: 'onChange'\n  }\n};\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport default {\n  title: 'Components/Angular Material/Button',\n  component: MatButton,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonModule\n      ]\n    })\n  ],\n  args: {\n    label: 'Button',\n    icon: 'favorite',\n    color: '',\n    disabled: false,\n    disableRipple: false\n  },\n  argTypes: {\n    color: {\n      description: 'Theme color palette for the button.',\n      control: {\n        type: 'select',\n        options: [null, 'primary', 'accent', 'warn']\n      }\n    },\n    disabled: {\n      description: 'Whether the button is disabled.',\n    },\n    disableRipple: {\n      description: 'Whether ripples are disabled.'\n    },\n    onClick: {\n      action: 'onClick'\n    }\n  },\n  parameters: {\n    controls: { expanded: true }\n  }\n} as Meta;\n\nexport const Default: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">{{ label }}</button>\n  `,\n  props: args\n});\n\nexport const Raised: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-raised-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">{{ label }}</button>\n  `,\n  props: args\n});\n\nexport const Stroked: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-stroked-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">{{ label }}</button>\n  `,\n  props: args\n});\n\nexport const Flat: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-flat-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">{{ label }}</button>\n  `,\n  props: args\n});\n\nexport const Icon: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-icon-button\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">\n    <mat-icon>{{ icon }}</mat-icon>\n  </button>\n  `,\n  moduleMetadata: {\n    imports: [MatButtonModule, MatIconModule]\n  },\n  props: args\n});\n\nexport const FAB: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-fab\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">\n    <mat-icon>{{ icon }}</mat-icon>\n  </button>\n  `,\n  moduleMetadata: {\n    imports: [MatButtonModule, MatIconModule]\n  },\n  props: args\n});\n\nexport const MiniFAB: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-mini-fab\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">\n    <mat-icon>{{ icon }}</mat-icon>\n  </button>\n  `,\n  moduleMetadata: {\n    imports: [MatButtonModule, MatIconModule]\n  },\n  props: args\n});\n\nexport const ExtendedFAB: Story<MatButton> = (args) => ({\n  template: `\n  <button mat-fab extended\n    [color]=\"color\"\n    [disabled]=\"disabled\"\n    [disableRipple]=\"disableRipple\"\n    (click)=\"onClick($event)\">\n    <mat-icon>{{ icon }}</mat-icon>\n    {{ label }}\n  </button>\n  `,\n  moduleMetadata: {\n    imports: [MatButtonModule, MatIconModule]\n  },\n  props: args\n});\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocomplete, MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nexport default {\n  title: 'Components/Angular Material/Autocomplete/Docs Examples',\n  component: MatAutocomplete,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatAutocompleteModule,\n        MatFormFieldModule,\n        MatInputModule\n      ]\n    })\n  ]\n} as Meta;\n\nexport const Simple: Story<MatAutocomplete> = () => ({\n  template: `\n  <form class=\"example-form\">\n    <mat-form-field class=\"example-full-width\">\n      <input type=\"text\"\n             placeholder=\"Pick one\"\n             aria-label=\"Number\"\n             matInput\n             [formControl]=\"myControl\"\n             [matAutocomplete]=\"auto\">\n      <mat-autocomplete #auto=\"matAutocomplete\">\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">\n          {{option}}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n  `,\n  props: {\n    myControl: new FormControl(),\n    options: ['One', 'Two', 'Three']\n  }\n});\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonToggle, MatButtonToggleGroup, MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport default {\n  title: 'Components/Angular Material/Button Toggle/Docs Examples',\n  component: MatButtonToggle,\n  subcomponents: { MatButtonToggleGroup },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonToggleModule,\n        MatIconModule\n      ]\n    })\n  ]\n} as Meta;\n\nexport const Overview: Story<MatButtonToggleGroup> = () => ({\n  template: `\n  <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n    <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\n    <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\n    <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\n  </mat-button-toggle-group>\n  `\n});\n\nexport const Appearance: Story<MatButtonToggleGroup> = () => ({\n  template: `\n  <p>\n    Default appearance:\n    <mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\">\n      <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\n      <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\n      <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  </p>\n\n  <p>\n    Legacy appearance:\n    <mat-button-toggle-group appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\">\n      <mat-button-toggle value=\"bold\">Bold</mat-button-toggle>\n      <mat-button-toggle value=\"italic\">Italic</mat-button-toggle>\n      <mat-button-toggle value=\"underline\">Underline</mat-button-toggle>\n    </mat-button-toggle-group>\n  </p>\n  `,\n  styles: [`\n  mat-button-toggle-group {\n    margin-left: 12px;\n  }\n  `]\n});\n\nexport const Exclusive: Story<MatButtonToggleGroup> = () => ({\n  template: `\n  <mat-button-toggle-group #group=\"matButtonToggleGroup\">\n    <mat-button-toggle value=\"left\" aria-label=\"Text align left\">\n      <mat-icon>format_align_left</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"center\" aria-label=\"Text align center\">\n      <mat-icon>format_align_center</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"right\" aria-label=\"Text align right\">\n      <mat-icon>format_align_right</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"justify\" disabled aria-label=\"Text align justify\">\n      <mat-icon>format_align_justify</mat-icon>\n    </mat-button-toggle>\n  </mat-button-toggle-group>\n  <div class=\"example-selected-value\">Selected value: {{group.value}}</div>\n  `,\n  styles: [`\n  .example-selected-value {\n    margin: 15px 0;\n  }\n  `]\n});\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatButton, MatButtonModule } from '@angular/material/button';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\n\nexport default {\n  title: 'Components/Angular Material/Button/Docs Examples',\n  component: MatButton,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatIconModule\n      ]\n    })\n  ]\n} as Meta;\n\nexport const Overview: Story<MatButton> = () => ({\n  template: `\n  <section>\n    <div class=\"example-label\">Basic</div>\n    <div class=\"example-button-row\">\n      <button mat-button>Basic</button>\n      <button mat-button color=\"primary\">Primary</button>\n      <button mat-button color=\"accent\">Accent</button>\n      <button mat-button color=\"warn\">Warn</button>\n      <button mat-button disabled>Disabled</button>\n      <a mat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Raised</div>\n    <div class=\"example-button-row\">\n      <button mat-raised-button>Basic</button>\n      <button mat-raised-button color=\"primary\">Primary</button>\n      <button mat-raised-button color=\"accent\">Accent</button>\n      <button mat-raised-button color=\"warn\">Warn</button>\n      <button mat-raised-button disabled>Disabled</button>\n      <a mat-raised-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Stroked</div>\n    <div class=\"example-button-row\">\n      <button mat-stroked-button>Basic</button>\n      <button mat-stroked-button color=\"primary\">Primary</button>\n      <button mat-stroked-button color=\"accent\">Accent</button>\n      <button mat-stroked-button color=\"warn\">Warn</button>\n      <button mat-stroked-button disabled>Disabled</button>\n      <a mat-stroked-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Flat</div>\n    <div class=\"example-button-row\">\n      <button mat-flat-button>Basic</button>\n      <button mat-flat-button color=\"primary\">Primary</button>\n      <button mat-flat-button color=\"accent\">Accent</button>\n      <button mat-flat-button color=\"warn\">Warn</button>\n      <button mat-flat-button disabled>Disabled</button>\n      <a mat-flat-button href=\"https://www.google.com/\" target=\"_blank\">Link</a>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Icon</div>\n    <div class=\"example-button-row\">\n      <div class=\"example-flex-container\">\n        <button mat-icon-button aria-label=\"Example icon button with a vertical three dot icon\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" aria-label=\"Example icon button with a home icon\">\n          <mat-icon>home</mat-icon>\n        </button>\n        <button mat-icon-button color=\"accent\" aria-label=\"Example icon button with a menu icon\">\n          <mat-icon>menu</mat-icon>\n        </button>\n        <button mat-icon-button color=\"warn\" aria-label=\"Example icon button with a heart icon\">\n          <mat-icon>favorite</mat-icon>\n        </button>\n        <button mat-icon-button disabled aria-label=\"Example icon button with a open in new tab icon\">\n          <mat-icon>open_in_new</mat-icon>\n        </button>\n      </div>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">FAB</div>\n    <div class=\"example-button-row\">\n      <div class=\"example-flex-container\">\n        <div class=\"example-button-container\">\n          <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-fab color=\"accent\" aria-label=\"Example icon button with a bookmark icon\">\n            <mat-icon>bookmark</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-fab color=\"warn\" aria-label=\"Example icon button with a home icon\">\n            <mat-icon>home</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-fab disabled aria-label=\"Example icon button with a heart icon\">\n            <mat-icon>favorite</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </section>\n  <mat-divider></mat-divider>\n  <section>\n    <div class=\"example-label\">Mini FAB</div>\n    <div class=\"example-button-row\">\n      <div class=\"example-flex-container\">\n        <div class=\"example-button-container\">\n          <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a menu icon\">\n            <mat-icon>menu</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-mini-fab color=\"accent\" aria-label=\"Example icon button with a plus one icon\">\n            <mat-icon>plus_one</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-mini-fab color=\"warn\" aria-label=\"Example icon button with a filter list icon\">\n            <mat-icon>filter_list</mat-icon>\n          </button>\n        </div>\n        <div class=\"example-button-container\">\n          <button mat-mini-fab disabled aria-label=\"Example icon button with a home icon\">\n            <mat-icon>home</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </section>\n  `,\n  moduleMetadata: {\n    imports: [MatDividerModule]\n  },\n  styles: [`\n  section {\n    display: table;\n  }\n\n  .example-label {\n    display: table-cell;\n    font-size: 14px;\n    margin-left: 8px;\n    min-width: 120px;\n  }\n\n  .example-button-row {\n    display: table-cell;\n    max-width: 600px;\n  }\n\n  .example-button-row .mat-mdc-button-base {\n    margin: 8px 8px 8px 0;\n  }\n\n  .example-flex-container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n\n  .example-button-container {\n    display: flex;\n    justify-content: center;\n    width: 120px;\n  }\n  `]\n});\n\nexport const Types: Story<MatButton> = () => ({\n  template: `\n  <h3>Basic Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-button>Basic</button>\n    <button mat-button color=\"primary\">Primary</button>\n    <button mat-button color=\"accent\">Accent</button>\n    <button mat-button color=\"warn\">Warn</button>\n    <button mat-button disabled>Disabled</button>\n    <a mat-button routerLink=\".\">Link</a>\n  </div>\n\n  <h3>Raised Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-raised-button>Basic</button>\n    <button mat-raised-button color=\"primary\">Primary</button>\n    <button mat-raised-button color=\"accent\">Accent</button>\n    <button mat-raised-button color=\"warn\">Warn</button>\n    <button mat-raised-button disabled>Disabled</button>\n    <a mat-raised-button routerLink=\".\">Link</a>\n  </div>\n\n  <h3>Stroked Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-stroked-button>Basic</button>\n    <button mat-stroked-button color=\"primary\">Primary</button>\n    <button mat-stroked-button color=\"accent\">Accent</button>\n    <button mat-stroked-button color=\"warn\">Warn</button>\n    <button mat-stroked-button disabled>Disabled</button>\n    <a mat-stroked-button routerLink=\".\">Link</a>\n  </div>\n\n  <h3>Flat Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-flat-button>Basic</button>\n    <button mat-flat-button color=\"primary\">Primary</button>\n    <button mat-flat-button color=\"accent\">Accent</button>\n    <button mat-flat-button color=\"warn\">Warn</button>\n    <button mat-flat-button disabled>Disabled</button>\n    <a mat-flat-button routerLink=\".\">Link</a>\n  </div>\n\n  <h3>Icon Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-icon-button aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button color=\"primary\" aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button color=\"accent\" aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button color=\"warn\" aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button disabled aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n  </div>\n\n  <h3>Fab Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-fab>Basic</button>\n    <button mat-fab color=\"primary\">Primary</button>\n    <button mat-fab color=\"accent\">Accent</button>\n    <button mat-fab color=\"warn\">Warn</button>\n    <button mat-fab disabled>Disabled</button>\n    <button mat-fab aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <a mat-fab routerLink=\".\">Link</a>\n  </div>\n\n  <h3>Mini Fab Buttons</h3>\n  <div class=\"example-button-row\">\n    <button mat-mini-fab>Basic</button>\n    <button mat-mini-fab color=\"primary\">Primary</button>\n    <button mat-mini-fab color=\"accent\">Accent</button>\n    <button mat-mini-fab color=\"warn\">Warn</button>\n    <button mat-mini-fab disabled>Disabled</button>\n    <button mat-mini-fab aria-label=\"Example icon-button with a heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <a mat-mini-fab routerLink=\".\">Link</a>\n  </div>\n\n  <h3>Extended Fab</h3>\n  <div class=\"example-button-row\">\n    <button mat-fab extended color=\"primary\">\n      <mat-icon>favorite</mat-icon>\n      Primary\n    </button>\n    <button mat-fab extended color=\"accent\">\n      <mat-icon>favorite</mat-icon>\n      Accent\n    </button>\n    <button mat-fab extended color=\"warn\">\n      <mat-icon>favorite</mat-icon>\n      Warn\n    </button>\n    <button mat-fab extended disabled>\n      <mat-icon>favorite</mat-icon>\n      Disabled\n    </button>\n    <a mat-fab extended routerLink=\".\">\n      <mat-icon>favorite</mat-icon>\n      Link\n    </a>\n  </div>\n  `,\n  styles: [`\n  .example-button-row button,\n  .example-button-row a {\n    margin-right: 8px;\n  }\n  `]\n});\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenu, MatMenuItem, MatMenuModule } from '@angular/material/menu';\n\nexport default {\n  title: 'Components/Angular Material/Menu/Docs Examples',\n  component: MatMenu,\n  subcomponents: { MatMenuItem },\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule\n      ]\n    })\n  ]\n} as Meta;\n\nexport const Overview: Story<MatMenu> = () => ({\n  template: `\n  <button mat-button [matMenuTriggerFor]=\"menu\">Menu</button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item>Item 1</button>\n    <button mat-menu-item>Item 2</button>\n  </mat-menu>\n  `\n});\n\nexport const Icons: Story<MatMenu> = () => ({\n  template: `\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item>\n      <mat-icon>dialpad</mat-icon>\n      <span>Redial</span>\n    </button>\n    <button mat-menu-item disabled>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voice mail</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button>\n  </mat-menu>\n  `\n});\n\nexport const Nested: Story<MatMenu> = () => ({\n  template: `\n  <button mat-button [matMenuTriggerFor]=\"animals\">Animal index</button>\n  <mat-menu #animals=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"vertebrates\">Vertebrates</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"invertebrates\">Invertebrates</button>\n  </mat-menu>\n\n  <mat-menu #vertebrates=\"matMenu\">\n    <button mat-menu-item [matMenuTriggerFor]=\"fish\">Fishes</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"amphibians\">Amphibians</button>\n    <button mat-menu-item [matMenuTriggerFor]=\"reptiles\">Reptiles</button>\n    <button mat-menu-item>Birds</button>\n    <button mat-menu-item>Mammals</button>\n  </mat-menu>\n\n  <mat-menu #invertebrates=\"matMenu\">\n    <button mat-menu-item>Insects</button>\n    <button mat-menu-item>Molluscs</button>\n    <button mat-menu-item>Crustaceans</button>\n    <button mat-menu-item>Corals</button>\n    <button mat-menu-item>Arachnids</button>\n    <button mat-menu-item>Velvet worms</button>\n    <button mat-menu-item>Horseshoe crabs</button>\n  </mat-menu>\n\n  <mat-menu #fish=\"matMenu\">\n    <button mat-menu-item>Baikal oilfish</button>\n    <button mat-menu-item>Bala shark</button>\n    <button mat-menu-item>Ballan wrasse</button>\n    <button mat-menu-item>Bamboo shark</button>\n    <button mat-menu-item>Banded killifish</button>\n  </mat-menu>\n\n  <mat-menu #amphibians=\"matMenu\">\n    <button mat-menu-item>Sonoran desert toad</button>\n    <button mat-menu-item>Western toad</button>\n    <button mat-menu-item>Arroyo toad</button>\n    <button mat-menu-item>Yosemite toad</button>\n  </mat-menu>\n\n  <mat-menu #reptiles=\"matMenu\">\n    <button mat-menu-item>Banded Day Gecko</button>\n    <button mat-menu-item>Banded Gila Monster</button>\n    <button mat-menu-item>Black Tree Monitor</button>\n    <button mat-menu-item>Blue Spiny Lizard</button>\n    <button mat-menu-item disabled>Velociraptor</button>\n  </mat-menu>\n  `\n});\n","import { moduleMetadata } from '@storybook/angular';\nimport { Story, Meta } from '@storybook/angular/types-6-0';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenu, MatMenuModule } from '@angular/material/menu';\n\nexport default {\n  title: 'Components/Angular Material/Menu',\n  component: MatMenu,\n  decorators: [\n    moduleMetadata({\n      imports: [\n        CommonModule,\n        BrowserAnimationsModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule\n      ]\n    })\n  ],\n  args: {\n    backdropClass: '',\n    overlapTrigger: false,\n    hasBackdrop: true,\n    class: ''\n  },\n  argTypes: {\n    backdropClass: {\n      description: 'Class to be added to the backdrop element.'\n    },\n    xPosition: {\n      description: 'Position of the menu in the X-axis.',\n      defaultValue: 'after',\n      control: {\n        type: 'select',\n        options: [null, 'before', 'after']\n      }\n    },\n    yPosition: {\n      description: 'Position of the menu in the Y-axis.',\n      defaultValue: 'below',\n      control: {\n        type: 'select',\n        options: [null, 'above', 'below']\n      }\n    },\n    overlapTrigger: {\n      description: 'Whether the menu should overlap its trigger.',\n      defaultValue: false\n    },\n    hasBackdrop: {\n      description: 'Whether the menu has a backdrop.',\n      defaultValue: true\n    },\n    class: {\n      description: 'CSS class names to be applied to the menu\\'s template.'\n    },\n    onClosed: {\n      action: 'onClosed'\n    },\n    onTriggerMenuOpened: {\n      action: 'onTriggerMenuOpened'\n    },\n    onTriggerMenuClosed: {\n      action: 'onTriggerMenuClosed'\n    }\n  },\n  parameters: {\n    controls: { expanded: true }\n  }\n} as Meta;\n\nexport const Overview: Story<MatMenu> = (args) => ({\n  template: `\n  <button mat-button\n    [matMenuTriggerFor]=\"menu\"\n    (menuOpened)=\"onTriggerMenuOpened($event)\"\n    (menuClosed)=\"onTriggerMenuClosed($event)\">Menu</button>\n  <mat-menu #menu=\"matMenu\"\n    [backdropClass]=\"backdropClass\"\n    [xPosition]=\"xPosition\"\n    [yPosition]=\"yPosition\"\n    [overlapTrigger]=\"overlapTrigger\"\n    [hasBackdrop]=\"hasBackdrop\"\n    [class]=\"class\"\n    (closed)=\"onClosed($event)\">\n    <button mat-menu-item>Item 1</button>\n    <button mat-menu-item>Item 2</button>\n  </mat-menu>\n  `,\n  props: args\n});\n\nexport const Icons: Story<MatMenu> = (args) => ({\n  template: `\n  <button mat-icon-button\n    aria-label=\"More actions\"\n    [matMenuTriggerFor]=\"actionsMenu\"\n    (menuOpened)=\"onTriggerMenuOpened($event)\"\n    (menuClosed)=\"onTriggerMenuClosed($event)\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #actionsMenu=\"matMenu\"\n    [backdropClass]=\"backdropClass\"\n    [xPosition]=\"xPosition\"\n    [yPosition]=\"yPosition\"\n    [overlapTrigger]=\"overlapTrigger\"\n    [hasBackdrop]=\"hasBackdrop\"\n    [class]=\"class\"\n    (closed)=\"onClosed($event)\">\n    <button mat-menu-item>\n      <mat-icon aria-hidden=\"true\">content_copy</mat-icon>\n      <span>Copy</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon aria-hidden=\"true\">content_cut</mat-icon>\n      <span>Cut</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon aria-hidden=\"true\">content_paste</mat-icon>\n      <span>Paste</span>\n    </button>\n  </mat-menu>\n  `\n});\n\nexport const Nested: Story<MatMenu> = (args) => ({\n  template: `\n  <button mat-button\n    [matMenuTriggerFor]=\"menu\"\n    (menuOpened)=\"onTriggerMenuOpened($event)\"\n    (menuClosed)=\"onTriggerMenuClosed($event)\">Menu</button>\n  <mat-menu #menu=\"matMenu\"\n    [backdropClass]=\"backdropClass\"\n    [xPosition]=\"xPosition\"\n    [yPosition]=\"yPosition\"\n    [overlapTrigger]=\"overlapTrigger\"\n    [hasBackdrop]=\"hasBackdrop\"\n    [class]=\"class\"\n    (closed)=\"onClosed($event)\">\n    <button mat-menu-item [matMenuTriggerFor]=\"subMenu\">Item 1</button>\n    <mat-menu #subMenu=\"matMenu\">\n      <button mat-menu-item>Sub-menu Item 1</button>\n      <button mat-menu-item>Sub-menu Item 2</button>\n      <button mat-menu-item>Sub-menu Item 3</button>\n    </mat-menu>\n    <button mat-menu-item>Item 2</button>\n  </mat-menu>\n  `,\n  props: args\n});\n","\nimport { setCompodocJson } from '@storybook/addon-docs/angular';\nimport { withCssResources } from '@storybook/addon-cssresources';\nimport docJson from '../documentation.json';\nsetCompodocJson(docJson);\n\nexport const decorators = [\n  withCssResources\n];\n\nexport const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  cssresources: [\n    {\n      id: 'indigo-pink',\n      code: '<link rel=\"stylesheet\" href=\"assets/themes/indigo-pink.css\">',\n      picked: true\n    },\n    {\n      id: 'deeppurple-amber',\n      code: '<link rel=\"stylesheet\" href=\"assets/themes/deeppurple-amber.css\">',\n      picked: false\n    },\n    {\n      id: 'pink-bluegrey',\n      code: '<link rel=\"stylesheet\" href=\"assets/themes/pink-bluegrey.css\">',\n      picked: false\n    },\n    {\n      id: 'purple-green',\n      code: '<link rel=\"stylesheet\" href=\"assets/themes/purple-green.css\">',\n      picked: false\n    }\n  ]\n};\n","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/home/runner/work/material-storybook/material-storybook/node_modules/@storybook/client-api';\nimport * as config from '/home/runner/work/material-storybook/material-storybook/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs/blocks';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Components/Angular Material/Getting Started\" parameters={{\n      docsOnly: true,\n      previewTabs: {\n        canvas: {\n          hidden: true\n        }\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"getting-started-with-angular-material\"\n    }}>{`Getting Started with Angular Material`}</h1>\n    <p>{`This guide explains how to setup your Angular project to begin using Angular Material. It includes information on prerequisites, installing Angular Material, and optionally displaying a sample material component in your application to verify your setup.`}</p>\n    <p><em parentName=\"p\">{`Angular Resources`}</em></p>\n    <p>{`If you are new to Angular or getting started with a new Angular application, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://angular.io/start\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Angular's full Getting Started Guide`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://angular.io/guide/setup-local\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Setting up your environment`}</a>{`.`}</p>\n    <p>{`For existing applications, follow the steps below to begin using Angular Material.`}</p>\n    <h3 {...{\n      \"id\": \"install-angular-material\"\n    }}>{`Install Angular Material`}</h3>\n    <p>{`Use the Angular CLI's install `}<a parentName=\"p\" {...{\n        \"href\": \"https://material.angular.io/guide/schematics\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`schematic`}</a>{` to set up your Angular Material project by running the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ng add @angular/material\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ng add`}</inlineCode>{` command will install Angular Material, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://material.angular.io/cdk/categories\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Component Dev Kit (CDK)`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://angular.io/guide/animations\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`Angular Animations`}</a>{` and ask you the following questions to determine which features to include:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Choose a prebuilt theme name, or \"custom\" for a custom theme:`}</p>\n        <p parentName=\"li\">{`You can choose from `}<a parentName=\"p\" {...{\n            \"href\": \"https://material.angular.io/guide/theming#using-a-pre-built-theme\",\n            \"target\": \"_blank\",\n            \"rel\": \"nofollow noopener noreferrer\"\n          }}>{`prebuilt material design themes`}</a>{` or set up an extensible `}<a parentName=\"p\" {...{\n            \"href\": \"https://material.angular.io/guide/theming#defining-a-custom-theme\",\n            \"target\": \"_blank\",\n            \"rel\": \"nofollow noopener noreferrer\"\n          }}>{`custom theme`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set up browser animations for Angular Material:`}</p>\n        <p parentName=\"li\">{`Importing the `}<a parentName=\"p\" {...{\n            \"href\": \"https://angular.io/api/platform-browser/animations/BrowserAnimationsModule\",\n            \"target\": \"_blank\",\n            \"rel\": \"nofollow noopener noreferrer\"\n          }}><inlineCode parentName=\"a\">{`BrowserAnimationsModule`}</inlineCode></a>{` into your application enables Angular's `}<a parentName=\"p\" {...{\n            \"href\": \"https://angular.io/guide/animations\",\n            \"target\": \"_blank\",\n            \"rel\": \"nofollow noopener noreferrer\"\n          }}>{`animation system`}</a>{`. Declining this will disable most of Angular Material's animations.`}</p>\n      </li>\n    </ol>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ng add`}</inlineCode>{` command will additionally perform the following configurations:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Add project dependencies to `}<inlineCode parentName=\"li\">{`package.json`}</inlineCode></li>\n      <li parentName=\"ul\">{`Add the Roboto font to your `}<inlineCode parentName=\"li\">{`index.html`}</inlineCode></li>\n      <li parentName=\"ul\">{`Add the Material Design icon font to your `}<inlineCode parentName=\"li\">{`index.html`}</inlineCode></li>\n      <li parentName=\"ul\">{`Add a few global CSS styles to:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Remove margins from `}<inlineCode parentName=\"li\">{`body`}</inlineCode></li>\n          <li parentName=\"ul\">{`Set `}<inlineCode parentName=\"li\">{`height: 100%`}</inlineCode>{` on `}<inlineCode parentName=\"li\">{`html`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`body`}</inlineCode></li>\n          <li parentName=\"ul\">{`Set Roboto as the default application font`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`You're done! Angular Material is now configured to be used in your application.`}</p>\n    <h3 {...{\n      \"id\": \"display-a-component\"\n    }}>{`Display a component`}</h3>\n    <p>{`Let's display a slider component in your app and verify that everything works.`}</p>\n    <p>{`You need to import the `}<inlineCode parentName=\"p\">{`MatSliderModule`}</inlineCode>{` that you want to display by adding the following lines to your app.module.ts file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`import { MatSliderModule } from '@angular/material/slider';\n…\n@NgModule ({....\n  imports: [...,\n  MatSliderModule,\n…]\n})\n`}</code></pre>\n    <p>{`Add the `}<inlineCode parentName=\"p\">{`<mat-slider>`}</inlineCode>{` tag to the `}<inlineCode parentName=\"p\">{`app.component.html`}</inlineCode>{` like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<mat-slider min=\"1\" max=\"100\" step=\"1\" value=\"1\"></mat-slider>\n`}</code></pre>\n    <p>{`Run your local dev server:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`ng serve\n`}</code></pre>\n    <p>{`and point your browser to `}<a parentName=\"p\" {...{\n        \"href\": \"http://localhost:4200\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`http://localhost:4200`}</a></p>\n    <p>{`You should see the material slider component on the page.`}</p>\n    <p>{`In addition to the install schematic, Angular Material comes with `}<a parentName=\"p\" {...{\n        \"href\": \"https://material.angular.io/guide/schematics\",\n        \"target\": \"_blank\",\n        \"rel\": \"nofollow noopener noreferrer\"\n      }}>{`several schematics`}</a>{` (like nav, table, address-form, etc.) that can be used to easily generate pre-built components in your application.`}</p>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Components/Angular Material/Getting Started', parameters: {\n  docsOnly: true,\n  previewTabs: {\n    canvas: {\n      hidden: true\n    }\n  }\n}, includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta } from '@storybook/addon-docs/blocks';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Components/Angular Material/Resources\" parameters={{\n      docsOnly: true,\n      previewTabs: {\n        canvas: {\n          hidden: true\n        }\n      }\n    }} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h1>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://material.angular.io\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`Angular Material docs`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://angular.io\",\n          \"target\": \"_blank\",\n          \"rel\": \"nofollow noopener noreferrer\"\n        }}>{`Angular docs`}</a></li>\n    </ul>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const __page = () => { throw new Error(\"Docs-only story\"); };\n\n__page.parameters = { docsOnly: true };\n\nconst componentMeta = { title: 'Components/Angular Material/Resources', parameters: {\n  docsOnly: true,\n  previewTabs: {\n    canvas: {\n      hidden: true\n    }\n  }\n}, includeStories: [\"__page\"],  };\n\nconst mdxStoryNameToKey = {};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","var map = {\n\t\"./components/material/autocomplete.stories.ts\": \"./projects/story-app/stories/components/material/autocomplete.stories.ts\",\n\t\"./components/material/button-toggle.stories.ts\": \"./projects/story-app/stories/components/material/button-toggle.stories.ts\",\n\t\"./components/material/button.stories.ts\": \"./projects/story-app/stories/components/material/button.stories.ts\",\n\t\"./components/material/card.stories.ts\": \"./projects/story-app/stories/components/material/card.stories.ts\",\n\t\"./components/material/examples/autocomplete.stories.ts\": \"./projects/story-app/stories/components/material/examples/autocomplete.stories.ts\",\n\t\"./components/material/examples/button-toggle.stories.ts\": \"./projects/story-app/stories/components/material/examples/button-toggle.stories.ts\",\n\t\"./components/material/examples/button.stories.ts\": \"./projects/story-app/stories/components/material/examples/button.stories.ts\",\n\t\"./components/material/examples/menu.stories.ts\": \"./projects/story-app/stories/components/material/examples/menu.stories.ts\",\n\t\"./components/material/menu.stories.ts\": \"./projects/story-app/stories/components/material/menu.stories.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./projects/story-app/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js%7Cjsx%7Cts%7Ctsx))$\";","var map = {\n\t\"./components/material/getting-started.stories.mdx\": \"./projects/story-app/stories/components/material/getting-started.stories.mdx\",\n\t\"./components/material/resources.stories.mdx\": \"./projects/story-app/stories/components/material/resources.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./projects/story-app/stories sync recursive ^\\\\.(?:(?:^%7C\\\\/%7C(?:(?:(?%21(?:^%7C\\\\/)\\\\.).)*?)\\\\/)(?%21\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/angular\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./projects/story-app/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./projects/story-app/stories', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);"],"names":["title","component","MatAutocomplete","decorators","moduleMetadata","imports","CommonModule","BrowserAnimationsModule","FormsModule","MatAutocompleteModule","MatFormFieldModule","MatInputModule","args","autoActiveFirstOption","class","disableRipple","panelWidth","autocompleteTriggerDisabled","autocompleteTriggerPosition","argTypes","description","defaultValue","onClosed","action","onOpened","onOptionActivated","onOptionSelected","control","type","options","parameters","controls","expanded","Default","template","props","MatButtonToggle","subcomponents","MatButtonToggleGroup","MatButtonToggleModule","MatIconModule","disabled","appearance","Single","bind","checked","Group","vertical","multiple","onChange","MatButton","MatButtonModule","label","icon","color","onClick","Raised","Stroked","Flat","Icon","FAB","MiniFAB","ExtendedFAB","ReactiveFormsModule","Simple","myControl","FormControl","Overview","Appearance","styles","Exclusive","MatDividerModule","Types","MatMenu","MatMenuItem","MatMenuModule","Icons","Nested","backdropClass","overlapTrigger","hasBackdrop","xPosition","yPosition","onTriggerMenuOpened","onTriggerMenuClosed","setCompodocJson","docJson","withCssResources","actions","argTypesRegex","cssresources","id","code","picked","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_defineProperty","obj","key","value","defineProperty","configurable","writable","config","forEach","addArgs","addArgTypes","decorator","addDecorator","loader","addLoader","addParameters","_objectSpread","target","i","arguments","length","source","getOwnPropertyDescriptors","defineProperties","enhancer","addArgTypesEnhancer","addArgsEnhancer","setGlobalRender","v","console","log","layoutProps","MDXContent","components","mdxType","docsOnly","previewTabs","canvas","hidden","parentName","isMDXComponent","__page","Error","componentMeta","includeStories","mdxStoryNameToKey","docs","page","mdxComponentAnnotations","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","webpackContextKeys","resolve","module","exports","require","configure"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}